{
  "git": [
    {
      "title": "Why Version Control Matters",
      "url": "http://teamtreehouse.com/library/git-basics/why-version-control-matters/introduction-to-git-basics",
      "description": "One of the most essential tools a developer can master is version control, and one of the most widely-used version control systems available today is Git. But what makes Git popular? And why should you learn to use version control anyway? In this stage we’ll explore all the benefits of using version control (including: helping you deal with changing requirements, data loss, sharing and collaborating with others), as well as the qualities of Git that make it such a popular choice in the modern development world."
    },
    {
      "title": "Getting Started With Git",
      "url": "http://teamtreehouse.com/library/git-basics/getting-started-with-git/git-ready",
      "description": "So you understand what version control is, why you should use it, and why Git is a good VCS to learn. Great! Let’s get started. In this stage we’ll start playing with Git repositories and learn the basics of storing our changes."
    },
    {
      "title": "Branches",
      "url": "http://teamtreehouse.com/library/git-basics/branches/branching-out",
      "description": "Now that we know the basics of using Git, let’s look at a very important concept in Version Control: Branching. Branching allows you to conveniently work on multiple versions of your code at once, and Git makes branching really easy."
    },
    {
      "title": "Merging",
      "url": "http://teamtreehouse.com/library/git-basics/merging/introduction-to-merging",
      "description": "You might be working on multiple different branches of your code at once, but in most cases you’ll only have one final version of your product that will incorporate the changes from all of those branches. Now that we’ve branched out our code, how do we get all of those changes back together? Most version control systems provide a concept called merging that lets us combine our changes together."
    },
    {
      "title": "Working With Remote Repositories",
      "url": "http://teamtreehouse.com/library/git-basics/working-with-remote-repositories/working-with-remotes",
      "description": "Version control systems are useful for working on personal projects, but where they really shine is when you use them to collaborate with others. The most common path for working with others is to store copies of your repositories remotely, and Git provides us with a set of tools we can use to interact with those remote repositories."
    },
    {
      "title": "Workflows",
      "url": "http://teamtreehouse.com/library/git-basics/workflows/a-day-in-the-life-of-a-git-project",
      "description": "Now that we know all the basic tools for managing projects with Git, it's time to put them all together. Let's take a look at how all the tools and ideas we've learned so far work together to make version control an important part of the day-to-day process of working on a project, and talk about some of the common ideas about best practices for using Git."
    }
  ]
}